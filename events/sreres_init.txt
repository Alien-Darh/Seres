namespace = seres_init

country_event = {
    id = seres_init.01
	title = seres_init.01.name
	desc = seres_init.01.desc
	picture = GFX_evt_seres_init
	show_sound = event_mystic_reveal
	location = root

	is_triggered_only = yes

	trigger = {	
		owner = { is_ai = no }
	}

	option = {
		name = seres_init.01.a
		owner = {
			if = {
				limit = {
				NOT = { has_technology = tech_mod_warp_drive_1 }
				}
				give_technology = { tech = tech_mod_warp_drive_1 }
			}
			else = {			
			}
		}	
 
		hidden_effect = {
			closest_system = {
				limit = {
					has_owner = no
					any_system_planet = {
						is_planet_class = pc_asteroid 
						has_anomaly = no
						NOT = { exists = archaeological_site }
					}
				}
                min_steps = 1
                max_steps = 3
                random_system_planet = {
                    limit = {
                        is_planet_class = pc_asteroid 
                        has_anomaly = no
                        NOT = { exists = archaeological_site }
                    }				
					save_event_target_as = deposit_advance
					save_event_target_as = sealed				
				}	
			}
		}
		hidden_effect = {		
			event_target:deposit_advance = {
				planet_event = {
					id = seres_init.011
					#days = 30
				}
			}	
		}
		hidden_effect = {		
			event_target:sealed = {
				country_event = {
					id = seres_init.023
					days = 360				
				}
			}
		}		
		hidden_effect = {
			country_event = { id = seres_init.022 days = 3600 }		
		}						
	}	
	
	option = {
		name = seres_init.01.b
		hidden_effect = {
			every_galaxy_planet = {
					limit = {
						OR = {
							is_planet_class = pc_asteroid
							is_planet_class = pc_ice_asteroid
						}	
					}		
					every_deposit = {
						limit = {
							OR = {
								is_deposit_type = d_dilithium_crystals_1
								is_deposit_type = d_dilithium_crystals_2
								is_deposit_type = d_dilithium_crystals_3
								is_deposit_type = d_quartz_crystals_1
								is_deposit_type = d_quartz_crystals_2
								is_deposit_type = d_quartz_crystals_3
							}	
						}
						remove_deposit = yes
					}
				}	
			}	
		}	
}

planet_event = {
	id = seres_init.011
	hide_window = yes
	location = root	

	is_triggered_only = yes
	
	immediate = { 
		clear_deposits = yes
		add_deposit = d_dilithium_crystals_1
		if = {
			limit = { has_mining_station = yes }
			random_mining_station = { dismantle = yes }
		}
		if = {
			limit = { has_research_station = yes }
			random_research_station = { dismantle = yes }
		}		
	}
}

country_event = {
    id = seres_init.022
	hide_window = yes	
	location = root	
	
	is_triggered_only = yes	
	
	immediate = {
		give_technology = {
			tech = tech_mine_dilithium_crystals
		}
	}	
}

country_event = {
	id = seres_init.023
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		has_distar = yes
		owner = { is_ai = no }		
	}
	
	immediate = {
		set_spawn_system_batch = begin
		hidden_effect = {
			closest_system = {
				limit = {
					has_owner = no
				}
                min_steps = 1
                max_steps = 2				
				spawn_system = {
					min_distance >= 20
					max_distance <= 40
					initializer = "distar_sealed_1_1"
				}
			}
			#Spawn Sealed System
			event_target:sealed_entry_system = {
				spawn_system = {
					min_distance >= 20
					max_distance <= 30
					max_jumps = 30
					initializer = "distar_sealed_1_2"
				}
			}
			#Isolate Sealed System
			if = {
				limit = { exists = event_target:sealed_system }
				event_target:sealed_system = {
					isolate_system = yes
					#Create Shroud Country
					if = {
						limit = { NOT = { exists = event_target:shroud_country } }
						create_country = {
							name = "NAME_Creatures_of_the_Shroud"
							type = shroud_spirits
							flag = {
								icon = {
									category = "special"
									file = "the_shroud.dds"
								}
								background= {
									category = "backgrounds"
									file = "00_solid.dds"
								}
								colors = {
									"dark_purple"
									"black"
									"null"
									"null"
								}
							}
						}
						last_created_country = {
							save_global_event_target_as = shroud_country
						}
					}
					#Create Miniboss
					create_fleet = {
						name = "NAME_Psionic_Entity"
						settings = {
							spawn_debris = no
							is_boss = yes
						}
						effect = {
							set_owner = event_target:shroud_country
							create_ship = {
								name = "NAME_Psionic_Entity"
								design = "NAME_Corrupted_Avatar"
							}
							set_location = {
								target = prev.star
								distance = 100
								angle = random
							}
							set_fleet_stance = aggressive
							set_aggro_range_measure_from = return_point
							set_aggro_range = 2000
							save_global_event_target_as = sealed_psionic_entity
						}
					}
				}
			}
		}
		set_spawn_system_batch = end

		#Spawn Special Wormholes
		event_target:sealed_entry_system = {
			event_target:sealed_system = {
				prev = { # done this way to ensure we don't spawn "orphan wormholes (wormholes that aren't linked to anything)
					spawn_natural_wormhole = {
						bypass_type = wormhole
						random_pos = no
						orbit_angle = 360
					}
				}
				spawn_natural_wormhole = {
					bypass_type = wormhole
					random_pos = no
					orbit_angle = 270
				}
				link_wormholes = prev
			}
		}
	}
}

country_event = {
    id = seres_init.02
	title = seres_init.02.name
	desc = seres_init.02.desc
	picture = GFX_evt_seres_init_crisis
	show_sound = event_mystic_reveal
	location = root

	fire_only_once = yes	
	#is_triggered_only = yes

	trigger = {	
		owner = { is_ai = no }
        OR = {
            has_global_flag = prethoryn_arrival
            has_global_flag = prethoryn_main_invasion
            has_global_flag = ai_invasion_ongoing
            has_global_flag = extradimensional_invasion_happened
            has_global_flag = extradimensional_second_portal
            has_global_flag = extradimensional_third_portal
        }
    }
	
	mean_time_to_happen = {
		months = 12
	}
	
	option = {
		name = seres_init.02.a
		add_research_option = tech_dark_matter_deflector
			add_tech_progress = {
				tech = tech_dark_matter_deflector
				progress = 0.25
			}
		add_research_option = tech_dark_matter_propulsion
			add_tech_progress = {
				tech = tech_dark_matter_propulsion
				progress = 0.25
			}
		add_research_option = tech_dark_matter_power_core
			add_tech_progress = {
				tech = tech_dark_matter_power_core
				progress = 0.25	
		}		
	}
	
	option = {
		name = seres_init.02.b	
		add_modifier = {
			modifier = mod_darhmod_precursor_seres_secrets_final
			days = -1
		}
	}
	option = {
		name = seres_init.02.c		
		add_modifier = {
			modifier = fallen_empire_gift_databanks
			days = -1
		}
	}			
}

country_event = {
	id = seres_init.03
	title = "seres_init.03.name"
	desc = "seres_init.03.desc"
	show_sound = event_swarm_crisis_ambient_stage_final_01

	diplomatic = yes
	fire_only_once = yes

	picture_event_data = {
		room = seres_space_room
	}
	
	trigger = {	
		owner = { is_ai = no }
        OR = {
            has_global_flag = prethoryn_invasion_defeated
            has_global_flag = ai_invasion_defeated
            has_global_flag = extradimensional_invasion_defeated
        }
    }
	
	option = {
		name = seres_init.03.a

		hidden_effect = {			
			add_modifier = {	
				modifier = mod_darhmod_precursor_seres_diplo
				days = -1	
			}
			if = {
				limit = {
					is_ai = no
					has_country_flag = darhmod_precursor_seres_finished
				}
			force_add_civic = civic_machine_assimilator
			}
			root = {
				capital_scope = {
				while = {
					count = 3
					remove_district = district_generator
				}
				add_planet_devastation = 100
				}
			}
			remove_country_flag = ai_no_wars
			total_war = yes
			country_event = { id = seres_init.05 }
		}			
	}	
	
	option = {
		name = seres_init.03.b
		hidden_effect = {	
			country_event = { id = seres_init.04 }
		}	
	}			
}

country_event = {
	id = seres_init.04
	title = "seres_init.04.name"
	desc = "seres_init.04.desc"
	picture = GFX_evt_seres_init_end
	show_sound = event_swarm_crisis_ambient_stage_final_01
	is_triggered_only = yes
	
	option = {
		name = seres_init.04.a
	}	
}

country_event = {
	id = seres_init.05
	title = "seres_init.05.name"
	desc = "seres_init.05.desc"
	picture = GFX_evt_big_bang
	show_sound = event_swarm_crisis_ambient_stage_final_01
	is_triggered_only = yes
	
	option = {
		name = seres_init.05.a
	}	
}